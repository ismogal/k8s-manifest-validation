{
  "description": "Service acts as a top-level container that manages a Route and Configuration which implement a network service. Service exists to provide a singular abstraction which can be access controlled, reasoned about, and which encapsulates software lifecycle decisions such as rollout policy and team resource ownership. Service acts only as an orchestrator of the underlying Routes and Configurations (much as a kubernetes Deployment orchestrates ReplicaSets), and its usage is optional but recommended. \n The Service's controller will track the statuses of its owned Configuration and Route, reflecting their statuses and conditions as its own. \n See also: https://github.com/knative/serving/blob/main/docs/spec/overview.md#service",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "serving.knative.dev/v1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "Service"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    },
    "spec": {
      "description": "ServiceSpec represents the configuration for the Service object. A Service's specification is the union of the specifications for a Route and Configuration.  The Service restricts what can be expressed in these fields, e.g. the Route must reference the provided Configuration; however, these limitations also enable friendlier defaulting, e.g. Route never needs a Configuration name, and may be defaulted to the appropriate \"run latest\" spec.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "template": {
          "description": "Template holds the latest specification for the Revision to be stamped out.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "metadata": {
              "x-kubernetes-preserve-unknown-fields": true
            },
            "spec": {
              "description": "RevisionSpec holds the desired state of the Revision (from the client).",
              "required": [
                "containers"
              ],
              "x-kubernetes-preserve-unknown-fields": true
            }
          }
        },
        "traffic": {
          "description": "Traffic specifies how to distribute traffic over a collection of revisions and configurations.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "TrafficTarget holds a single entry of the routing table for a Route.",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "configurationName": {
                "description": "ConfigurationName of a configuration to whose latest revision we will send this portion of traffic. When the \"status.latestReadyRevisionName\" of the referenced configuration changes, we will automatically migrate traffic from the prior \"latest ready\" revision to the new one.  This field is never set in Route's status, only its spec.  This is mutually exclusive with RevisionName.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "latestRevision": {
                "description": "LatestRevision may be optionally provided to indicate that the latest ready Revision of the Configuration should be used for this traffic target.  When provided LatestRevision must be true if RevisionName is empty; it must be false when RevisionName is non-empty.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "percent": {
                "description": "Percent indicates that percentage based routing should be used and the value indicates the percent of traffic that is be routed to this Revision or Configuration. `0` (zero) mean no traffic, `100` means all traffic. When percentage based routing is being used the follow rules apply: - the sum of all percent values must equal 100 - when not specified, the implied value for `percent` is zero for   that particular Revision or Configuration",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "revisionName": {
                "description": "RevisionName of a specific revision to which to send this portion of traffic.  This is mutually exclusive with ConfigurationName.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "tag": {
                "description": "Tag is optionally used to expose a dedicated url for referencing this target exclusively.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "url": {
                "description": "URL displays the URL for accessing named traffic targets. URL is displayed in status, and is disallowed on spec. URL must contain a scheme (e.g. http://) and a hostname, but may not contain anything else (e.g. basic auth, url path, etc.)",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        }
      }
    },
    "status": {
      "description": "ServiceStatus represents the Status stanza of the Service resource.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "address": {
          "description": "Address holds the information needed for a Route to be the target of an event.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "url": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        },
        "annotations": {
          "description": "Annotations is additional Status fields for the Resource to save some additional State as well as convey more information to the user. This is roughly akin to Annotations on any k8s resource, just the reconciler conveying richer information outwards.",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "conditions": {
          "description": "Conditions the latest available observations of a resource's current state.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "Condition defines a readiness condition for a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            }
          }
        },
        "latestCreatedRevisionName": {
          "description": "LatestCreatedRevisionName is the last revision that was created from this Configuration. It might not be ready yet, for that use LatestReadyRevisionName.",
          "type": [
            "string",
            "null"
          ]
        },
        "latestReadyRevisionName": {
          "description": "LatestReadyRevisionName holds the name of the latest Revision stamped out from this Configuration that has had its \"Ready\" condition become \"True\".",
          "type": [
            "string",
            "null"
          ]
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the 'Generation' of the Service that was last processed by the controller.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "traffic": {
          "description": "Traffic holds the configured traffic distribution. These entries will always contain RevisionName references. When ConfigurationName appears in the spec, this will hold the LatestReadyRevisionName that we last observed.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "TrafficTarget holds a single entry of the routing table for a Route.",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "configurationName": {
                "description": "ConfigurationName of a configuration to whose latest revision we will send this portion of traffic. When the \"status.latestReadyRevisionName\" of the referenced configuration changes, we will automatically migrate traffic from the prior \"latest ready\" revision to the new one.  This field is never set in Route's status, only its spec.  This is mutually exclusive with RevisionName.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "latestRevision": {
                "description": "LatestRevision may be optionally provided to indicate that the latest ready Revision of the Configuration should be used for this traffic target.  When provided LatestRevision must be true if RevisionName is empty; it must be false when RevisionName is non-empty.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "percent": {
                "description": "Percent indicates that percentage based routing should be used and the value indicates the percent of traffic that is be routed to this Revision or Configuration. `0` (zero) mean no traffic, `100` means all traffic. When percentage based routing is being used the follow rules apply: - the sum of all percent values must equal 100 - when not specified, the implied value for `percent` is zero for   that particular Revision or Configuration",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "revisionName": {
                "description": "RevisionName of a specific revision to which to send this portion of traffic.  This is mutually exclusive with ConfigurationName.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "tag": {
                "description": "Tag is optionally used to expose a dedicated url for referencing this target exclusively.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "url": {
                "description": "URL displays the URL for accessing named traffic targets. URL is displayed in status, and is disallowed on spec. URL must contain a scheme (e.g. http://) and a hostname, but may not contain anything else (e.g. basic auth, url path, etc.)",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "url": {
          "description": "URL holds the url that will distribute traffic over the provided traffic targets. It generally has the form http[s]://{route-name}.{route-namespace}.{cluster-level-suffix}",
          "type": [
            "string",
            "null"
          ]
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "serving.knative.dev",
      "kind": "Service",
      "version": "v1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}